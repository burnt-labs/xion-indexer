# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type AllHub @entity {
  id: ID! # The block height
  allHub: [String]!, # Array of hub contracts
  hub: Hub @derivedFrom(field:"allHub") # This is a lookup for the hub contract deployed by hub
}

# This entity stores hub's seat details
type HubSeat @entity {
  id: ID! # The hub contract address
  seatContracts: [String]! # Array of seat contract addresses for this hub
  latestSeat: Seat @derivedFrom(field:"hubSeat") # This is a lookup for the latest seat contract deployed by hub
}

type Hub @entity {
  id: ID!, # The hub contract address
  allHub: AllHub! # This id is always pointing to the "hubs" key 
  name: String!,
  hub_url: String!,
  description: String!,
  tags: [String]!,
  social_links: [SocialLink]! @derivedFrom(field:"hub"),
  creator: String!,
  owner: String!, # The owner of the hub can change e.g. when the hub is transferred
  thumbnail_image_url: String!,
  banner_image_url: String!,
  seat_contracts: [Seat] @derivedFrom(field:"hub"),
}

type SocialLink @entity {
  id: ID!,
  hub: Hub! # The hub contract address
  name: String!,
  url: String!,
}

type Seat @entity {
  id: ID! # The seat contract address
  hub: Hub!, # Hub this Seat belongs to
  hubSeat: HubSeat! # HubSeat container this seat belongs to
  name: String!
  image_uri: String!
  description: String!
  benefits: [SeatBenefit!]! @derivedFrom(field:"benefitSeat")
  saleDetail: Sale! @derivedFrom(field:"saleSeat") # Lookup for the sale details of this seat
}

type SeatBenefit @entity {
    id: ID! # The seat contract address
    benefitSeat: Seat!
    name: String!
    status: String!
}

type Sale @entity {
    id: ID! # The seat contract address
    saleSeat: Seat! # The seat contract address this sale belongs to
    totalSupply: BigInt!
    tokensMinted: BigInt!
    startTime: BigInt!
    endTime: BigInt!
    price: [Coin]! @derivedFrom(field:"sale")
    disabled: Boolean!
}

type Coin @entity {
  id: ID! # The seat contract address
  sale: Sale! # The seat address + sale time to make this unique
  denom: String!
  amount: BigInt!
}
